@mixin respond($breakpoint) {
  @if $breakpoint == small-phone {
    @media only screen and (max-width: 25em) {
      @content;
    }
  }

  @if $breakpoint == phone {
    @media only screen and (max-width: 37.5em) {
      @content;
    }
  }

  @if $breakpoint == largephone {
    @media only screen and (max-width: 43em) {
      @content;
    }
  }

  @if $breakpoint == tablet-portrait {
    @media only screen and (max-width: 56.25em) {
      @content;
    }
  }
  @if $breakpoint == tablet-landscape {
    @media only screen and (max-width: 75em) {
      @content;
    }
  }
  @if $breakpoint == ultrawide {
    @media only screen and (min-width: 112.5em) {
      @content;
    }
  }
}

@mixin flexCenter {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin buttonExpandEffect {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  position: absolute;
  border-radius: 10rem;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s;
}

@mixin inputStyle($width, $border-color, $border-radius) {
  width: $width;
  border-color: $border-color;
  border-radius: $border-radius;
  padding: 1.5rem 2rem;
  margin-bottom: 1rem;

  &:focus {
    border-bottom: 3px solid $color-tertiary;
    box-shadow: 0 1rem 2rem rgba($color-black, 0.1);
    outline: none;
  }

  &:focus:invalid {
    border-bottom: 3px solid $color-primary-dark;
  }
}

@mixin dashboardComponent {
  width: 106rem;
  border-radius: 0.4rem;
  background-color: $color-dashboard-white;
  padding: 5rem;
  transform: translateX(10rem);

  @include respond(tablet-landscape) {
    width: 85rem;
  }

  @include respond(tablet-portrait) {
    padding: 2rem;
    transform: translateX(0);
    width: 100%;
  }

  @include respond(phone) {
    padding: 1.5rem;
    transform: translateX(0);
  }

  @include respond(small-phone) {
    padding: 1rem 1rem;
    transform: translateX(0);
  }
}
